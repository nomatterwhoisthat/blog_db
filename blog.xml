<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE PROJECT SYSTEM "blog.DTD">
<PROJECT>
  <NAME>MyBlog</NAME>
  <DESCRIPTION>
    Приложение представляет собой платформу для ведения блогов, где пользователи имеют возможность создавать, редактировать и удалять свои записи, оставлять комментарии к блогам, отвечать на комментарии других пользователей, добавлять категории и фотографию к своим блогам при желании и искать блоги по названию категорий.
    Реализована гибкая система контроля доступа с использованием RBAC (role-based access control).Система поддерживает роли пользователей, такие как администратор и гость. Гость имеет возможность создавать, редактировать и удалять свои блоги, просматривать блоги других пользователей,писать комментарии и удалять только свои комментарии. Пользователь может прикреплять фотографии к своим блогам. Администратор же имеет более расширенные возможности такие как: возможность удалить любой блог и комментарий любого пользователя.
  </DESCRIPTION>

  <NAME_PROJECT>MyBlog</NAME_PROJECT>
  
  <SUBJECT_AREA>
    Приложение разработано для создания и управления блогами. Оно ориентировано на пользователей, желающих вести личные блоги или управлять тематическими статьями. Система поддерживает администрирование контента и ролей, а также обеспечивает классификацию блогов по категориям для лучшей организации и навигации. Осуществлена иерархия комментариев. Основные сущности системы включают блоги, комментарии, категории и пользователей.
  </SUBJECT_AREA>
  
  <DATA>
    <USER>
      <NAME>Имя (обязательное, уникальное)</NAME>
      <EMAIL>Электронная почта (обязательное, уникальное)</EMAIL>
      <PASSWORD>Пароль (обязательное, захэшированное)</PASSWORD>
      <ROLE>Роль (admin, guest, значение по умолчанию - guest)</ROLE>
    </USER>

    <BLOG>
      <TITLE>Заголовок блога (обязательное, макс. 255 символов)</TITLE>
      <CONTENT>Содержимое блога (обязательное)</CONTENT>
      <CATEGORY>Категория блога (опционально)</CATEGORY>
      <PHOTO>Фотография блога (опционально)</PHOTO>
    </BLOG>

    <COMMENT>
      <BLOG_ID>id блога</BLOG_ID>
      <CONTENT>содержание комментария</CONTENT>
      <PARENT_COMMENT_ID>id родительского комментария (если это ответ)</PARENT_COMMENT_ID>
    </COMMENT>

    <CATEGORY>
      <CATEGORY_NAME>Название категории (макс. 100 символов)</CATEGORY_NAME>
    </CATEGORY>

    <CONSTRAINTS>
      <BLOG_TITLE>Заголовок блога - максимум 255 символов</BLOG_TITLE>
      <BLOG_CONTENT>Контент блога - минимум 1 символ и максимум 20000</BLOG_CONTENT>
      <CATEGORY_NAME>Название категории - максимум 100 символов</CATEGORY_NAME>
      <MAX_CATEGORIES>Количество категорий - не больше 5</MAX_CATEGORIES>
      <MAX_PHOTOS>Количество фотографий - 1</MAX_PHOTOS>
      <PHOTO_FORMAT>Изображения должны быть в формате .jpg и .png</PHOTO_FORMAT>
      <EMAIL_FORMAT>Электронная почта должна соответствовать формату email</EMAIL_FORMAT>
      <COMMENT_CONTENT>Содержимое комментария - минимум 1 символ</COMMENT_CONTENT>
      <PASSWORD_CONSTRAINT>Пароль - минимум 6 символов, как минимум одна заглавная и прописная буква</PASSWORD_CONSTRAINT>
      <USER_NAME_UNIQUE>Имя пользователя должно быть уникальным</USER_NAME_UNIQUE>
      <EMAIL_UNIQUE>email должен быть уникальным и валидным</EMAIL_UNIQUE>
    </CONSTRAINTS>
  </DATA>

  <USER_ROLES>
    <ROLE>
      <NAME>Guest</NAME>
      <RESPONSIBILITY>Создание блогов, обновление и удаление своих записей, возможность просматривать все блоги, находить блог по id блога, оставлять и удалять комментарии, оставлять ответы на другие комментарии, просматривать промодерированные комментарии под определенным блогом (по id блога), получать блоги по названию категорий, дополнять список категорий и просматривать его, создание своего пользователя, получение пользователя по id и удаление своего пользователя, получать список отсортированных блогов по длине блога и количеству промодерированных комментариев, загружать фотографии, просматривать фотографию по id фото, прикреплять фотографию к блогу(если блог без фото), создавать блог с фотографией, просматривать фотографию, которая прикреплена к блогу, просматривать список всех загруженных фотографий пользователем.</RESPONSIBILITY>
    </ROLE>
    
    <ROLE>
      <NAME>Administrator</NAME>
      <RESPONSIBILITY>Имеет более расширенные возможности, такие как возможность удалить блог любого пользователя и удалить любой комментарий, модерировать комментарии, есть возможность просматривать всех пользователей и удалять их, получать список отсортированных блогов по количеству всех комментариев.</RESPONSIBILITY>
    </ROLE>

    <ROLE>
      <NAME>Moderator</NAME>
      <RESPONSIBILITY>После отправки пользователем сообщения, просматривает его -> модерирует -> после положительной модерации комментарий становится доступным всем или же удаляется.</RESPONSIBILITY>
    </ROLE>
  </USER_ROLES>

  <API>
    <DESCRIPTION>REST API для управления данными (создание, редактирование, удаление) блогов, комментариев и категорий.</DESCRIPTION>
    <SWAGGER>Swagger-документация API проекта находится по пути docs/, где описаны все доступные эндпоинты, возможные запросы, параметры и ответы для каждой операции.</SWAGGER>
  </API>

  <TECHNOLOGY_STACK>
    <FRONTEND>FastAPI — создание API и маршрутизация</FRONTEND>
    <BACKEND>SQLAlchemy — ORM для работы с базой данных</BACKEND>
    <DATABASE>OAuth2 — управление аутентификацией пользователей</DATABASE>
    <UI_DESIGN>Passlib — хэширование паролей</UI_DESIGN>
  </TECHNOLOGY_STACK>

  <TESTING>
    <METHOD>Тесты находятся в папке test и для запуска нужно:</METHOD>
    <STEP>
      <COMMAND>export PYTHONPATH=.</COMMAND>
      <COMMAND>pytest</COMMAND>
    </STEP>
    <STEP>
      <COMMAND>make tests</COMMAND>
    </STEP>
  </TESTING>

  <INSTALLATION_GUIDE>
    <STEP>Предварительно установите Docker для вашей системы.</STEP>
    <STEP>Склонируйте репозиторий:</STEP>
    <COMMAND>git clone &lt;URL_репозитория&gt;</COMMAND>
    <COMMAND>cd &lt;название_папки_с_репозиторием&gt;</COMMAND>
    <STEP>Создайте и активируйте виртуальное окружение:</STEP>
    <STEP>Для Mac или Linux:</STEP>
    <COMMAND>python3 -m venv env</COMMAND>
    <COMMAND>source env/bin/activate</COMMAND>
    <STEP>Для Windows:</STEP>
    <COMMAND>python -m venv venv</COMMAND>
    <COMMAND>venv\Scripts\activate</COMMAND>
    <STEP>Соберите и запустите контейнеры:</STEP>
    <COMMAND>make run-docker</COMMAND>
    <STEP>Примените миграции:</STEP>
    <COMMAND>make run-migration</COMMAND>
    <STEP>Доступ к приложению:</STEP>
    <STEP>После успешного выполнения миграций, приложение будет доступно по адресу: [http://localhost:8000](http://localhost:8000).</STEP>
    <STEP>Остановите контейнеры и удалите созданные образы:</STEP>
    <COMMAND>make stop-docker</COMMAND>
  </INSTALLATION_GUIDE>

  <DATABASE_SCHEMA>
    <IMAGE>![image](https://github.com/user-attachments/assets/0b050a23-1ddb-4871-bb3a-080b0b305084)</IMAGE>
  </DATABASE_SCHEMA>

  <LANGUAGE>Python 3.12.6</LANGUAGE>

  <DATABASE_SYSTEM>PostgreSQL</DATABASE_SYSTEM>
</PROJECT>
